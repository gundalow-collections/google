- name: create a model
  register: model
  google.gcp.gcp_mlengine_model:
    name: model_version
    description: My model
    regions:
    - us-central1
    online_prediction_logging: 'true'
    online_prediction_console_logging: 'true'
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    state: present
- name: delete a version
  google.gcp.gcp_mlengine_version:
    name: '{{ resource_name | replace(''-'', ''_'') }}'
    model: '{{ model }}'
    runtime_version: 1.13
    python_version: 3.5
    is_default: 'true'
    deployment_uri: gs://ansible-cloudml-bucket/
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    state: absent
- name: create a version
  register: result
  google.gcp.gcp_mlengine_version:
    name: '{{ resource_name | replace(''-'', ''_'') }}'
    model: '{{ model }}'
    runtime_version: 1.13
    python_version: 3.5
    is_default: 'true'
    deployment_uri: gs://ansible-cloudml-bucket/
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    state: present
- name: assert changed is true
  assert:
    that:
    - result.changed == true
- name: verify that version was created
  register: results
  google.gcp.gcp_mlengine_version_info:
    model: '{{ model }}'
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    scopes:
    - https://www.googleapis.com/auth/cloud-platform
- name: verify that command succeeded
  assert:
    that:
    - results['resources'] | map(attribute='name') | select("match", ".*{{ resource_name
      | replace('-', '_') }}.*") | list | length == 1
- name: create a version that already exists
  register: result
  google.gcp.gcp_mlengine_version:
    name: '{{ resource_name | replace(''-'', ''_'') }}'
    model: '{{ model }}'
    runtime_version: 1.13
    python_version: 3.5
    is_default: 'true'
    deployment_uri: gs://ansible-cloudml-bucket/
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    state: present
- name: assert changed is false
  assert:
    that:
    - result.changed == false
- name: delete a version
  register: result
  google.gcp.gcp_mlengine_version:
    name: '{{ resource_name | replace(''-'', ''_'') }}'
    model: '{{ model }}'
    runtime_version: 1.13
    python_version: 3.5
    is_default: 'true'
    deployment_uri: gs://ansible-cloudml-bucket/
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    state: absent
- name: assert changed is true
  assert:
    that:
    - result.changed == true
- name: verify that version was deleted
  register: results
  google.gcp.gcp_mlengine_version_info:
    model: '{{ model }}'
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    scopes:
    - https://www.googleapis.com/auth/cloud-platform
- name: verify that command succeeded
  assert:
    that:
    - results['resources'] | map(attribute='name') | select("match", ".*{{ resource_name
      | replace('-', '_') }}.*") | list | length == 0
- name: delete a version that does not exist
  register: result
  google.gcp.gcp_mlengine_version:
    name: '{{ resource_name | replace(''-'', ''_'') }}'
    model: '{{ model }}'
    runtime_version: 1.13
    python_version: 3.5
    is_default: 'true'
    deployment_uri: gs://ansible-cloudml-bucket/
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    state: absent
- name: assert changed is false
  assert:
    that:
    - result.changed == false
- name: delete a model
  register: model
  ignore_errors: true
  google.gcp.gcp_mlengine_model:
    name: model_version
    description: My model
    regions:
    - us-central1
    online_prediction_logging: 'true'
    online_prediction_console_logging: 'true'
    project: '{{ gcp_project }}'
    auth_kind: '{{ gcp_cred_kind }}'
    service_account_file: '{{ gcp_cred_file }}'
    state: absent
